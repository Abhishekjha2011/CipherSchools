//Q. Write a recursive function to print descending values from n to 1.-> Sample input: n=5,output : 5 4 3 2 1.

 package recursion;
//public class RecursionStudy
//{
// static void printDescending(int n)
//{
// Base Condition -> Telling it when to stop
// if(n<1) return;
// System.out.println(n);
// printDescending(n-1);
//}

//public static void main(String[] args)
//{
// int n=5;
// printDescending(n);
//   }
//}
 

//2.Fibonacci Series: 

//public  class Fibonacci
//{
//static int fib(int n)
{
if(n<2) return n;
//if (n==0) return 0;
//if(n==1) return 1;
//int a = fib(n-1);
//int b = fib(n-2);
//return a + b;
//}
//public static void main(String[] args)
  //{
//int n = 7;
//System.out.println(fib(n));
  //}
//}


//3. BinarySearchWithoutRecursion :

public class BinarySearchWithoutRecursion
{
 public static void main(String[] args)
{
 int arr[] = {2,5,8,12,16,23,38,56,72}; //Pre-requisite -> Sorted Array
int x = 23;
//Binary Search below
int l = 0; //Leftmost index
int r = arr.length-1; //Rightmost Index

while(l<=r)
{
//     int mid =(r-l)/2 + 1;
int mid = (l+r)/2;
if(arr[mid] == x)
{
System.out.println("value found at index: " + mid);
return;
}
else if(x<arr[mid])
{
 r = mid-1;
}
else {
      l = mid + 1;
   }
 }
 System.out.println("value not found.");
}
       }

